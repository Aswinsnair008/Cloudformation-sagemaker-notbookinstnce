AWSTemplateFormatVersion: 2010-09-09

Description: >
    This template deploys a VPC, Amazon SageMaker Notebook Instance, S3_Bucket

Parameters:
  VpcName:
    Default: SagemakerVPC
    Type: String

  VpcCIDR:
    Default: 10.215.0.0/16
    Type: String

  Subnet1CIDR:
    Default: 10.215.10.0/24
    Type: String

  Subnet2CIDR:
    Default: 10.215.20.0/24
    Type: String

  DefaultCodeRepository:
    Default: https://github.com/awslabs/ec2-spot-labs.git
    Type: String

Resources:

# VPC ----------------------------------------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      Tags:
        - Key: Name
          Value: !Ref VpcName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref VpcName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref Subnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${VpcName} (Public)

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs ]
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref Subnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${VpcName} (Public)

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref VpcName

  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1

  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet2

# END VPC ------------------------------------------------------

# NOTEBOOK -----------------------------------------------------
  NotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      InstanceType: "ml.t2.medium"
      RoleArn: !GetAtt ExecutionRole.Arn
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref SecurityGroup
      DefaultCodeRepository: !Ref DefaultCodeRepository
      VolumeSizeInGB: 5
  ExecutionRole: 
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "sagemaker.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      Policies: 
        - 
          PolicyName: "sagemaker-notebook-policy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              # - Effect: "Allow"
              #   Action: 
              #     - "cloudwatch:PutMetricData"
              #     - "logs:CreateLogStream"
              #     - "logs:PutLogEvents"
              #     - "logs:CreateLogGroup"
              #     - "logs:DescribeLogStreams"
              #   Resource: "*"
              - Effect: "Allow"
                Action: 
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucket"
                Resource: 
                - !GetAtt S3bucket.Arn
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Notebook Instance Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - FromPort: '443'
          IpProtocol: tcp
          ToPort: '443'
          CidrIp: 0.0.0.0/0
#END NOTEBOOK ----------------------------------------------------------------------

# S3 BUCKET ------------------------------------------------------------------------
  S3bucket:
    Type: 'AWS::S3::Bucket'
    # DeletionPolicy: Retain
    Properties:
      BucketName: sagemaker15154787521
  # IAMS3bucketpolicy:
  #   Type: 'AWS::IAM::Policy'
  #   DependsOn:
  #     - S3AccessRole
  #   Properties:
  #     PolicyName: "s3_access"
  #     PolicyDocument: 
  #       Version: "2012-10-17" 
  #       Statement: 
  #         - Effect: "Allow"
  #           Action: 
  #             - "s3:PutBucketPolicy"
  #             - "s3:DeleteBucket"
  #             - "s3:GetObject"
  #           Resource: "*"       
  #     Roles:
  #       - !Ref S3AccessRole
  # S3AccessRole: 
  #   Type: AWS::IAM::Role
  #   Properties: 
  #     AssumeRolePolicyDocument: 
  #       Version: "2012-10-17"
  #       Statement: 
  #         - 
  #           Effect: "Allow"
  #           Principal: 
  #             Service: 
  #               - "sagemaker.amazonaws.com"
  #           Action: 
  #             - "sts:AssumeRole"
  #     Path: "/"

  # RootInstanceProfile:
  #   Type: AWS::IAM::InstanceProfile
  #   DependsOn:
  #     - S3AccessRole
  #   Properties:
  #     Path: /
  #     Roles:
  #       - !Ref S3AccessRole
          
# END NOTEBOOK -------------------------------------------------

Outputs:

  NotebookInstance:
    Value: !GetAtt NotebookInstance.NotebookInstanceName
  # Sagemakerbucket:
  #   Value: !Ref Sagemakerbucket
  #   Description: Bucket name